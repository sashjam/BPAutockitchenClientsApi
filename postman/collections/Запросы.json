{
	"info": {
		"_postman_id": "877ccf0b-7c52-4ba3-8103-ac481e81dfd7",
		"name": "Запросы",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "9695358-877ccf0b-7c52-4ba3-8103-ac481e81dfd7"
	},
	"item": [
		{
			"name": "Отправка данных",
			"id": "414cfc51-62d9-4bd2-bee1-0522ec69ed9c",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{Entrypoint}}store",
					"host": [
						"{{Entrypoint}}store"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "c629e2db-05cc-4884-8ad1-bae2e8b69b5a",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"\r",
					"const auth = async () => {\r",
					"\r",
					"    //Данные запроса\r",
					"    const entrypoint  = pm.collectionVariables.get(\"Entrypoint\");\r",
					"    if(!entrypoint) throw new Error(\"`Entrypoint` variable empty\");\r",
					"    \r",
					"    const username = pm.collectionVariables.get(\"username\");\r",
					"    if(!username) throw new Error(\"`username` variable empty\");\r",
					"\r",
					"    const password = pm.collectionVariables.get(\"password\");\r",
					"     if(!password) throw new Error(\"`password` variable empty\");\r",
					"\r",
					"    \r",
					"    //Опции запроса\r",
					"    const authOptions = {\r",
					"        url:  entrypoint + 'token',\r",
					"        method: 'POST',\r",
					"        body: {\r",
					"            mode: 'urlencoded',\r",
					"            urlencoded: [\r",
					"                { key: \"username\", value: username },\r",
					"                { key: \"password\", value: password },\r",
					"                { key: \"domain\",  value:'localhost:80' }\r",
					"            ]\r",
					"        }\r",
					"    };\r",
					"\r",
					"\r",
					"    //Отсылаем и обрабатываем запрос\r",
					"    pm.sendRequest(authOptions, \r",
					"        (err, res) => {\r",
					"        //console.log(res.text());\r",
					"        if (err === null) {\r",
					"            const jsonRes = res.json();\r",
					"            if(jsonRes.type === 'success' && jsonRes.token){\r",
					"                console.log('Token success!!!');\r",
					"                pm.collectionVariables.set(\"token\",jsonRes.token);\r",
					"            }else{\r",
					"                console.log(jsonRes);\r",
					"                throw new Error(\"Сервер не предоставил токен\");\r",
					"                \r",
					"            }\r",
					"            return true;\r",
					"        }\r",
					"\r",
					"        console.log(res,err);\r",
					"        throw new Error(\"Не удалось авторизоваться\");\r",
					"    });\r",
					"\r",
					"};\r",
					"\r",
					"await auth();\r",
					"   "
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "d95d636b-97a1-41e1-b3a3-86fd22a12f5c",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "dc03f719-adf7-4de7-94ed-3d89e01b2376",
			"key": "Entrypoint",
			"value": "localhost:8890/api/public/auto-kitchen/",
			"type": "string"
		},
		{
			"id": "a90422ba-f2b9-403e-ab72-c9f6bae303b6",
			"key": "username",
			"value": "sashjambox@yandex.ru",
			"type": "string"
		},
		{
			"id": "38092f37-b596-4f29-95dd-c80a2a75cf4a",
			"key": "password",
			"value": "sashjambox@yandex.ru",
			"type": "string"
		},
		{
			"id": "c6e6c314-b654-4ba2-990c-f8cee8dd813d",
			"key": "token",
			"value": "",
			"type": "string"
		}
	]
}